# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Docker Bazel Run'
description: 'Run a Bazel-based docker image for Protobuf CI testing'
inputs:
  credentials:
    required: true
    description: "The GCP credentials to use for reading the docker image"
    type: string
  image:
    required: true
    description: "The docker image to use"
    type: string
  bazel-cache:
    required: true
    description: >
      A unique path for the Bazel cache.  This will trigger the generation
      of a BAZEL_CACHE environment variable inside the container that provides
      the appropriate flags for any bazel command.
    type: string
  bazel:
    required: false
    description: "The Bazel command to run"
    type: string
  bash:
    required: false
    description: "A bash command to run.  $BAZEL_FLAGS will be available to use for bazel runs."
    type: string
  exclude-targets:
    required: false
    description: "Bazel target patterns to exclude. Each pattern must be prefixed with a minus sign."
    type: string

runs:
  using: 'composite'
  steps:
    - name: Symlink current Actions repo
      env:
        GH_ACTION_DIR: ${{ github.workspace }}/../../_actions/${{ github.action_repository }}/${{ github.action_ref }}/
        GH_ACTION_CLONE: ${{ github.workspace }}/../../_actions/current
      shell: bash
      run: ln -fs $GH_ACTION_DIR $GH_ACTION_CLONE

    - name: Authenticate
      id: auth
      uses: ./../../_actions/current/internal/gcloud-auth
      with:
        credentials: ${{ inputs.credentials }}

    - name: Setup Runner
      uses: ./../../_actions/current/internal/setup-runner

    - name: Calculate Image Hash
      id: image-hash
      shell: bash
      run: echo ::set-output name=value::$(echo ${{ inputs.image }} | md5sum | cut -f1 -d" ")

    - name: Setup Bazel
      id: bazel
      uses: ./../../_actions/current/internal/bazel-setup
      with:
        credentials-file: /workspace/$(basename ${{ steps.auth.outputs.credentials-file }})
        bazel-cache: ${{ inputs.bazel-cache }}-${{ steps.image-hash.outputs.value }}

    - name: Hook up repository Cache
      shell: bash
      run: echo "BAZEL_FLAGS=$BAZEL_FLAGS --repository_cache='/workspace/${{ env.REPOSITORY_CACHE_PATH }}'" >> $GITHUB_ENV

    - name: Validate inputs
      if: ${{ (inputs.bash && inputs.bazel) || (!inputs.bash && !inputs.bazel) }}
      shell: bash
      run: echo "Invalid specification of both non-Bazel and Bazel command"; exit 1

    - name: Run Bash Docker
      uses: ./../../_actions/current/internal/docker-run
      if: ${{ inputs.bash }}
      with:
        image: ${{ inputs.image }}
        run-flags: --entrypoint "/bin/bash"
        command: -l -c "${{ inputs.bash }}"

    - name: Run Bazel Docker
      uses: ./../../_actions/current/internal/docker-run
      if: ${{ !inputs.bash }}
      with:
        image: ${{ inputs.image }}
        command: ${{ inputs.bazel }} ${{ env.BAZEL_FLAGS }} ${{ inputs.exclude-targets && format('-- {0}', inputs.exclude-targets) || '' }}

    - name: Save Bazel repository cache
      # Only allow repository cache updates during post-submits.
      if: ${{ github.event_name != 'pull_request' && github.event_name != 'pull_request_target' }}
      uses: ./../../_actions/current/internal/repository-cache-save
